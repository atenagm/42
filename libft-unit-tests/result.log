ft_memset:     [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_bzero:      [OK] [OK] [OK] [OK] 
ft_memcpy:     [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_memccpy:    [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] 
ft_memmove:    [MISSING]
ft_memchr:     [MISSING]
ft_memcmp:     [MISSING]
ft_strlen:     [MISSING]
ft_strdup:     [MISSING]
ft_strcpy:     [MISSING]
ft_strncpy:    [MISSING]
ft_strcat:     [MISSING]
ft_strncat:    [MISSING]
ft_strlcat:    [MISSING]
ft_strchr:     [MISSING]
ft_strrchr:    [MISSING]
ft_strstr:     [MISSING]
ft_strnstr:    [MISSING]
ft_strcmp:     [MISSING]
ft_strncmp:    [MISSING]
ft_atoi:       [MISSING]
ft_isalpha:    [MISSING]
ft_isdigit:    [MISSING]
ft_isalnum:    [MISSING]
ft_isascii:    [MISSING]
ft_isprint:    [MISSING]
ft_toupper:    [MISSING]
ft_tolower:    [MISSING]
ft_memalloc:   [MISSING]
ft_memdel:     [MISSING]
ft_strnew:     [MISSING]
ft_strdel:     [MISSING]
ft_strclr:     [CRASH] {protected}
[crash]: your strclr does not set to 0 the string
Test code:
	char b[] = "strclr test !\r\n";
	char n[0xF0];
	size_t size = strlen(b);

	memset(n, 0, size);
	ft_strclr(b);
	if (!memcmp(b, n, size))
		exit(TEST_SUCCESS);
	exit(TEST_FAILED);


ft_striter:    [MISSING]
ft_striteri:   [MISSING]
ft_strmap:     [MISSING]
ft_strmapi:    [MISSING]
ft_strequ:     [MISSING]
ft_strnequ:    [MISSING]
ft_strsub:     [MISSING]
ft_strjoin:    [MISSING]
ft_strtrim:    [MISSING]
ft_strsplit:   [MISSING]
ft_itoa:       [MISSING]
ft_putchar:    [OK] [OK] [OK] 
ft_putstr:     [OK] [OK] {protected}
ft_putendl:    [OK] [OK] {protected}
ft_putnbr:     [OK] [OK] [OK] [OK] [OK] 
ft_putchar_fd: [MISSING]
ft_putstr_fd:  [MISSING]
ft_putendl_fd: [MISSING]
ft_putnbr_fd:  [MISSING]
